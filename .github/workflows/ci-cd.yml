name: CI/CD

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: CI (lint/test/build)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: admin-panel
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: admin-panel/package-lock.json

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Lint
        run: npm run lint --if-present

      - name: Test
        run: npm test --if-present

      - name: Build
        run: npm run build

  deploy:
    name: CD (EC2 via SSH)
    if: github.ref == 'refs/heads/main' && success()
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (metadata only)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script_stop: true
          timeout: 600s
          command_timeout: 600s
          script: |
            set -euo pipefail
            [ -f ~/.bash_profile ] && source ~/.bash_profile || true
            [ -f ~/.bashrc ] && source ~/.bashrc || true
            [ -s ~/.nvm/nvm.sh ] && . ~/.nvm/nvm.sh && nvm use --lts || true

            cd "${EC2_PROJECT_PATH:-/home/ec2-user/ec2/admin-panel}"

            echo "[1/4] Git sync"
            git fetch --all
            git checkout main
            git pull origin main --ff-only

            echo "[2/4] Install & Build"
            if [ -f package-lock.json ]; then
              npm ci --prefer-offline
            else
              npm install
            fi
            npm run build

            echo "[3/4] PM2 reload/start"
            pm2 describe "${PM2_APP:-cnx-dev}" >/dev/null 2>&1 || pm2 start ecosystem.config.cjs --name "${PM2_APP:-cnx-dev}"
            pm2 reload "${PM2_APP:-cnx-dev}" || pm2 restart "${PM2_APP:-cnx-dev}"
            pm2 save || true

            echo "[4/4] Health check"
            curl -fsS http://localhost:3000/ >/dev/null

            echo "âœ… Deploy done"
